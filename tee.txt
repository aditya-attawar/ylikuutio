TEE-lista:
Listaa tähän keskeneräiset asiat kiireellisyysjärjestyksessä kiireellisimmät ylös. Rasti ruutuun ja valmiit-osastolle kun on valmis.

Ylikuution kehityksen kannalta välttämättömiä työvaiheita:
[ ] Lisää vokselimaailma.
[ ] Lisää tekoälyobjektit.
[ ] Lisää konsoliin skenejen (`Scene`) latauskomento `load`.
[ ] Siirrä pääsilmukka pois `main`-funktiosta ja Ajokista Ylikuution `ontology::Universe`-luokkaan.
[ ] Ota käyttöön vapaavalintaiset näppäinasetukset.
[ ] Ota käyttöön kamera-objektit.
[ ] Ota käyttöön GLFM-kirjasto, ainoastaan Android-käännöksiä varten. https://github.com/brackeen/glfm
[ ] Lisää muuttuja `wireframe`: `set wireframe on` / `set wireframe off`.
[ ] Lisää muuttuja `text_size`.
[ ] Lisää muuttuja `direction`.
[ ] Ota käyttöön TinySpline.
[ ] Lisää bicubic-interpolointi.
[ ] Lisää spline-interpolointi.
[ ] Lisää muuttuja `triangulation`: `set triangulation bilinear` / `set triangulation bicubic` / `set triangulation southwest_northeast` / `set triangulation southeast_northwest`.
[ ] Koodaa taustalla toimiva skenejen (`Scene`) lataus.
[ ] Lisää konsoliin objektien listauskomento `objects`.
[ ] Lisää entiteettikohtaiset pre- ja post-render-takaisinkutsut `prerender_callback ja `postrender_callback`.
[ ] Luo graafi maailman vertekseistä ja särmistä.
[ ] Lisää ray castingiä käyttävä toiminto verteksien valitsemiseen ja muokkaamiseen.
[ ] Lisää verteksien muokkaaminen.
[ ] Lisää octree-segmentointi.
[ ] Lisää tuki vektorifonteille.
[ ] Lisää tekoälyoliot (robotit).
[ ] Lisää TinyScheme-tuki tekoälyolioiden ohjelmointiin.
[ ] Lisää muuttujan `up` arvon asettaminen konsolissa komennolla `set up`.
[ ] Lisää muuttujan `right` arvon asettaminen konsolissa komennolla `set right`.
[ ] Lisää dynaaminen paikallaan oleva vesi.
[ ] Lisää fysiikkamallinnus.
[ ] Lisää virtaava vesi (serverillä laskettava).
[ ] Lisää Internet-koodi (ASIO).

Vähemmän kiireellisiä:
[ ] Lisää TinyScheme-tuki konsoliin.
[ ] Lisää tuki kolmiulotteiselle tekstille.
[ ] Lisää tuki osittain läpinäkyvälle tekstille.
[ ] Lisää tuki yli 3-ulotteisille kappaleille (projisoidaan `Object::render()`-metodissa 3-ulotteiseen avaruuteen).
[ ] Tallenna kunkin robotin senhetkinen näkymä taulukkoon, josta robotti voi käsitellä sitä ohjelmallisesti C++- ja/tai GLSL-koodilla.
[ ] Toteuta V1:n simulointi.
[ ] Toteuta V2:n simulointi.

Valmiit:
[x] Lisää testi-VBO, vaikka jonkinlainen partikkeliobjekti.
[x] Määrittele objektiluokka.
[x] Lisää tuki useille VBO:ille.
[x] `string.h` -> `cstring`.
[x] `strcmp` -> `std::strcmp`.
[x] `strlen` -> `std::strlen`.
[x] Koodaa takaisinkutsut (callback) toimintakuntoon.
[x] Testaa takaisinkutsujen toimintaa.
[x] Lisää konsoli (aukeaa näppäimellä `).
[x] Lisää mahdollisuus nimetä entiteettihierarkian minkä tahansa tason olioita.
[x] Koodaa konsoliin tekstin vieritys kun 'ikkuna' tulee täyteen.
[x] Lisää konsoliin infokomento `info` (kertoo entiteeteistä, esim. objekteista verteksien lukumäärän ym. tietoja).
[x] Lisää muuttuja `horizontal_angle`.
[x] Lisää muuttuja `vertical_angle`.
[x] Lisää muuttuja `right`.
[x] Lisää muuttuja `up`.
[x] Lisää muuttuja `window_width`.
[x] Lisää muuttuja `window_height`.
